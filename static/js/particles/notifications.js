$(document).ready(function(){var t="{{ notifications_new|length }}";"0"!=t&&($(".notifications .alert").each(function(){$(this).fadeIn("slow")}),setTimeout(function(){$.ajax({url:"{% url 'notifications:read' %}",data:{csrfmiddlewaretoken:"{{ csrf_token }}"},async:!0,success:function(t,n){(t.response="OK")?$(".notifications .alert").each(function(){$(this).fadeOut("slow")}):alert("Ошибка чтения уведомлений")},error:function(t,n,o){alert("Все плохо, расскажите нам про эту ошибку \n\r\n\r"+t+n+o),console.log(t)},type:"POST",dataType:"json"})},6e3))}),$(document).on("click",".delete-notification",function(){var t=$(this).attr("id").split("-"),n=t[1];$.ajax({url:"{% url 'notifications:delete' %}",data:{csrfmiddlewaretoken:"{{ csrf_token }}",notification_id:n},async:!0,success:function(t,n){var o=$(".notifications-count").html();o-=1,0==o?($(".notifications-menu-item").html(""),$("#notificationsModal").modal("hide")):$(".notifications-count").html(o)},error:function(t,n,o){alert("Все плохо, расскажите нам про эту ошибку \n\r\n\r"+t+n+o),console.log(t)},type:"POST",dataType:"json"})});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpY2xlcy9ub3RpZmljYXRpb25zLmpzIl0sIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsInJlYWR5IiwiY291bnQiLCJlYWNoIiwidGhpcyIsImZhZGVJbiIsInNldFRpbWVvdXQiLCJhamF4IiwidXJsIiwiZGF0YSIsImNzcmZtaWRkbGV3YXJldG9rZW4iLCJhc3luYyIsInN1Y2Nlc3MiLCJ0ZXh0U3RhdHVzIiwiZmFkZU91dCIsImFsZXJ0IiwiZXJyb3IiLCJyZXNwb25zZSIsInN0YXR1cyIsImVycm9yVGhyb3duIiwiY29uc29sZSIsImxvZyIsInR5cGUiLCJkYXRhVHlwZSIsIm9uIiwiYXJyIiwiYXR0ciIsInNwbGl0Iiwibm90aWZpY2F0aW9uX2lkIiwiaHRtbCIsIm1vZGFsIl0sIm1hcHBpbmdzIjoiQUFBQUEsRUFBRUMsVUFBVUMsTUFBTSxXQUNkLEdBQUlDLEdBQVEsZ0NBQ0MsTUFBVEEsSUFDQUgsRUFBRSx5QkFBeUJJLEtBQUssV0FDNUJKLEVBQUVLLE1BQU1DLE9BQU8sVUFFbkJDLFdBQVcsV0FDUFAsRUFBRVEsTUFDRUMsSUFBSyxpQ0FDTEMsTUFDSUMsb0JBQXFCLG9CQUV6QkMsT0FBTyxFQUNQQyxRQUFTLFNBQVVILEVBQU1JLElBQ2pCSixFQUFlLFNBQUksTUFDbkJWLEVBQUUseUJBQXlCSSxLQUFLLFdBQzVCSixFQUFFSyxNQUFNVSxRQUFRLFVBR3BCQyxNQUFNLDhCQUdkQyxNQUFPLFNBQVVDLEVBQVVDLEVBQVFDLEdBQy9CSixNQUFNLG9EQUFzREUsRUFBV0MsRUFBU0MsR0FDaEZDLFFBQVFDLElBQUlKLElBRWhCSyxLQUFNLE9BQ05DLFNBQVUsVUFFZixRQUlYeEIsRUFBRUMsVUFBVXdCLEdBQUcsUUFBUSx1QkFBd0IsV0FDM0MsR0FBSUMsR0FBTTFCLEVBQUVLLE1BQU1zQixLQUFLLE1BQU1DLE1BQU0sS0FDL0JDLEVBQWtCSCxFQUFJLEVBQzFCMUIsR0FBRVEsTUFDRUMsSUFBSyxtQ0FDTEMsTUFDSUMsb0JBQXFCLG1CQUNyQmtCLGdCQUFpQkEsR0FFckJqQixPQUFPLEVBQ1BDLFFBQVMsU0FBVUgsRUFBTUksR0FDckIsR0FBSVgsR0FBUUgsRUFBRSx3QkFBd0I4QixNQUN0QzNCLElBQWdCLEVBQ0gsR0FBVEEsR0FDQUgsRUFBRSw0QkFBNEI4QixLQUFLLElBQ25DOUIsRUFBRSx1QkFBdUIrQixNQUFNLFNBRS9CL0IsRUFBRSx3QkFBd0I4QixLQUFLM0IsSUFHdkNjLE1BQU8sU0FBVUMsRUFBVUMsRUFBUUMsR0FDL0JKLE1BQU0sb0RBQXNERSxFQUFXQyxFQUFTQyxHQUNoRkMsUUFBUUMsSUFBSUosSUFFaEJLLEtBQU0sT0FDTkMsU0FBVSIsImZpbGUiOiJwYXJ0aWNsZXMvbm90aWZpY2F0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY291bnQgPSBcInt7IG5vdGlmaWNhdGlvbnNfbmV3fGxlbmd0aCB9fVwiXG4gICAgaWYgKGNvdW50ICE9IFwiMFwiKSB7XG4gICAgICAgICQoJy5ub3RpZmljYXRpb25zIC5hbGVydCcpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJCh0aGlzKS5mYWRlSW4oJ3Nsb3cnKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICB1cmw6IFwieyUgdXJsICdub3RpZmljYXRpb25zOnJlYWQnICV9XCIsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBjc3JmbWlkZGxld2FyZXRva2VuOiAne3sgY3NyZl90b2tlbiB9fSdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFzeW5jOiB0cnVlLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhLCB0ZXh0U3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhWydyZXNwb25zZSddID0gJ09LJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLm5vdGlmaWNhdGlvbnMgLmFsZXJ0JykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5mYWRlT3V0KCdzbG93Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCfQntGI0LjQsdC60LAg0YfRgtC10L3QuNGPINGD0LLQtdC00L7QvNC70LXQvdC40LknKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChyZXNwb25zZSwgc3RhdHVzLCBlcnJvclRocm93bikge1xuICAgICAgICAgICAgICAgICAgICBhbGVydCgn0JLRgdC1INC/0LvQvtGF0L4sINGA0LDRgdGB0LrQsNC20LjRgtC1INC90LDQvCDQv9GA0L4g0Y3RgtGDINC+0YjQuNCx0LrRgyBcXG5cXHJcXG5cXHInICsgcmVzcG9uc2UgKyBzdGF0dXMgKyBlcnJvclRocm93bik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIDYwMDApO1xuICAgIH1cbn0pO1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcuZGVsZXRlLW5vdGlmaWNhdGlvbicsIGZ1bmN0aW9uKCl7XG4gICAgdmFyIGFyciA9ICQodGhpcykuYXR0cihcImlkXCIpLnNwbGl0KCctJyk7XG4gICAgdmFyIG5vdGlmaWNhdGlvbl9pZCA9IGFyclsxXTtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IFwieyUgdXJsICdub3RpZmljYXRpb25zOmRlbGV0ZScgJX1cIixcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgY3NyZm1pZGRsZXdhcmV0b2tlbjogJ3t7IGNzcmZfdG9rZW4gfX0nLFxuICAgICAgICAgICAgbm90aWZpY2F0aW9uX2lkOiBub3RpZmljYXRpb25faWRcbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmM6IHRydWUsXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhLCB0ZXh0U3RhdHVzKSB7XG4gICAgICAgICAgICB2YXIgY291bnQgPSAkKFwiLm5vdGlmaWNhdGlvbnMtY291bnRcIikuaHRtbCgpO1xuICAgICAgICAgICAgY291bnQgPSBjb3VudCAtIDE7XG4gICAgICAgICAgICBpZiAoY291bnQgPT0gMCkge1xuICAgICAgICAgICAgICAgICQoXCIubm90aWZpY2F0aW9ucy1tZW51LWl0ZW1cIikuaHRtbCgnJyk7XG4gICAgICAgICAgICAgICAgJCgnI25vdGlmaWNhdGlvbnNNb2RhbCcpLm1vZGFsKCdoaWRlJylcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJChcIi5ub3RpZmljYXRpb25zLWNvdW50XCIpLmh0bWwoY291bnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3BvbnNlLCBzdGF0dXMsIGVycm9yVGhyb3duKSB7XG4gICAgICAgICAgICBhbGVydCgn0JLRgdC1INC/0LvQvtGF0L4sINGA0LDRgdGB0LrQsNC20LjRgtC1INC90LDQvCDQv9GA0L4g0Y3RgtGDINC+0YjQuNCx0LrRgyBcXG5cXHJcXG5cXHInICsgcmVzcG9uc2UgKyBzdGF0dXMgKyBlcnJvclRocm93bik7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICBkYXRhVHlwZTogXCJqc29uXCJcbiAgICB9KTtcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==